(self.webpackChunkpyturtle=self.webpackChunkpyturtle||[]).push([[261,568],{163:(e,t,s)=>{"use strict";s.r(t),s.d(t,{TurtleCanvasModel:()=>n,TurtleCanvasView:()=>l});var i=s(228),a=s(337);class n extends a.DOMWidgetModel{defaults(){return{...super.defaults(),_model_name:"TurtleCanvasModel",_view_name:"TurtleCanvasView",_model_module:"pyturtle",_view_module:"pyturtle",_model_module_version:"0.1.0",_view_module_version:"0.1.0"}}}class l extends a.DOMWidgetView{render(){this.turtles={},this.create_canvas(),this.model.on("change:command",this.execute,this),this.model.on("change:last_turtle",this.create_turtle,this)}create_turtle(){const e=this.model.get("last_turtle");Number.isInteger(e.id)&&(this.turtles[e.id]=this.canvas.getTurtle())}create_canvas(){let e=document.createElement("canvas");this.canvas=new i.TurtleComponent,this.canvas.width=this.model.get("width"),this.canvas.height=this.model.get("height"),e.setAttribute("width",this.canvas.width),e.setAttribute("height",this.canvas.height),this.canvas.canvasStyle=this.model.get("canvas_style"),this.canvas.spriteScale=this.model.get("sprite_scale"),this.canvas.initializeCanvas(this.el),this.el.appendChild(e),this.set_canvas()}set_canvas(){this.model.set("canvas",{element:this.canvas}),this.model.save_changes()}set_turtle(){this.model.set("turtle",{element:this.turtle}),this.model.save_changes()}get_canvas(){let e=this.model.get("canvas");if(e)return e.element}get_turtle(){let e=this.model.get("turtle");if(e)return e.element}execute(){this.command=this.model.get("command"),this.command.function_name&&(this.run(),this.command={})}run(){let e=this.command.turtle_id,t=this.turtles[e];t&&t[this.command.function_name](...this.command.args)}}},568:(e,t,s)=>{e.exports=s(163),e.exports.version=s(306).version},261:(e,t,s)=>{var i=s(568),a=s(337);e.exports={id:"pyturtle:plugin",requires:[a.IJupyterWidgetRegistry],activate:function(e,t){t.registerWidget({name:"pyturtle",version:i.version,exports:i})},autoStart:!0}},306:e=>{"use strict";e.exports={version:"0.1.0"}}}]);